;;; https://github.com/borkdude/clj-kondo/blob/master/doc/config.md

{:project-root-uri "file:///home/pdenno/Documents/git/schedulingTBD" ; ToDo: Fix this!

 :linters {:mount/defstate      {:level :warning}
           :mount.core/defstate {:level :warning} ; Guessing. Not what ethpran did.

           ;; unused-referred-var is about :refer. https://github.com/clj-kondo/clj-kondo/blob/master/doc/linters.md#unused-referred-var
           :unused-referred-var {:exclude {taoensso.timbre [error debug info log]
                                           clojure.test    [deftest is testing]}}

           ;; https://github.com/clj-kondo/clj-kondo/blob/master/doc/linters.md#unresolved-var
           ;; New versions of datahike don't actually have forms for these functions and macros.
           ;; But there is lots of clojure.spec in DH, so many things will be caught at runtime.
           :unresolved-var      {:exclude [datahike.api]}

           ;; :exclude-patterns is for bindings, not vars. See https://github.com/clj-kondo/clj-kondo/blob/master/doc/linters.md
           #_#_:unused-binding {:exclude-patterns ["^recreate.*" "^unknown-projects" "^backup.*"]}

           ;;------------ Some clojure-lsp things ---------------

           ;; https://clojure-lsp.io/settings/#clojure-lspunused-public-var
           :clojure-lsp/unused-public-var {:level :warning
                                           :exclude-when-contains-meta #{:diag}}} ; This doesn't seem to be working! (meta should be on the var, right?)

 ;; Gist for defstate: https://gist.github.com/ethpran/e1741a5c408aec831b5e3a7e24f40fea
 :hooks   {:analyze-call {mount.core/defstate hooks.defstate/defstate}}


 ;; https://github.com/clj-kondo/clj-kondo/blob/master/doc/config.md#lint-a-custom-macro-like-a-built-in-macro --- Use defn, not defmacro.
 :lint-as {;https://andersmurphy.com/2024/01/03/clojure-clj-kondo-datalog-linting.html
           datahike.api/q                           datascript.core/q
           shop3-zmq/defshop2db                     clojure.core/defn
           shop3-zmq/defdb2shop                     clojure.core/defn
           ezzmq.core/with-new-context              clojure.core/defmacro}} ; A macro, but not investigated; clojure.core/defn doesn't fix it.
